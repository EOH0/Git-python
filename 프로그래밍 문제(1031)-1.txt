- '모스 부호(1)' : 모스부호를 해독하는 프로그램 작성. 문자열 letter가 매개변수로 주어질 때, letter를 영어 소문자로 바꾼 문자열을 출력하는 프로그램을 작성하시오.
모스부호는 다음과 같다.
morse = { 
    '.-':'a','-...':'b','-.-.':'c','-..':'d','.':'e','..-.':'f',
    '--.':'g','....':'h','..':'i','.---':'j','-.-':'k','.-..':'l',
    '--':'m','-.':'n','---':'o','.--.':'p','--.-':'q','.-.':'r',
    '...':'s','-':'t','..-':'u','...-':'v','.--':'w','-..-':'x',
    '-.--':'y','--..':'z'
}
입력 : ['..', '.-..', '---', '...-', '.', '.--.', '-.--', '-', '....', '---', '-.'] -> 'ilovepython'

- 입력이 다음과 같이 주어질 때 이를 모스부호로 변환하시오.

   'ilovepython' -> '..', '.-..', '---', '...-', '.', '.--.', '-.--', '-', '....', '---', '-.'


- text로 구성된 파일의 이름이 주어지면 해당 파일이 총 몇줄인지 계산하는 프로그램을 작성하시오. 단 아무 글자도 없는 빈줄은 줄 수에서 제외한다.


- 문자열이 주어질 때 'a'의 갯수부터 'z'의 갯수까지 표시된 리스트를 출력하는 프로그램을 작성하시오. 단, 문자열은 소문자로만 구성되어 있다고 가정.
    programmers = [1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 2, 0, 1, 1, 0, 3, 1, 0, 0, 0, 0, 0, 0, 0]


- 다음과 같은 2차원 리스트가 주어질 때 리스트의 모든 값의 합과 최대값을 구하는 프로그램을 작성하시오.
   [[1, 2, 3], [1,2], [3,5], [5, 2, 2, 1, 5]] -> 32, 5


- 괄호가 주어질 때 쌍이 맞는지 확인하는 프로그램을 작성하시오. 
"{([]{}())}()[]" -> correct
"{([]{}()}()[]" -> incorrect


- 1부터 13까지의 수에서, 1은 1, 10, 11, 12, 13 이렇게 총 6번 등장합니다. 정수 i, j, k가 입력으로 주어질 때, i부터 j까지 k가 몇 번 등장하는지 출력하는 프로그램을 작성하시오.
 i = 1, j = 13, k = 1  -> 6


- 정수 배열 list와 정수 n이 주어질 때, list에 들어있는 정수 중 n과 가장 가까운 수를 출력하는 프로그램을 작성하시오. 답이 두개일 때는 작은 수를 출력하시오.
[1, 2, 3, 4], 2 -> 2
[1,2,4,5], 3 -> 2


- 다음은 시저 암호화 기법을 사용하여 생성한 암호문이다. 해독해서 원래의 문장으로 복구하시오.(문제해결과 컴퓨팅사고_05 수업내용 참고)
"AbclgPizlIvlJmIujqbqwca"



- 알파벳 문자열이 주어질 때 두개의 같은 문자가 서로 인접하면 이를 지우고 앞뒤를 이어붙여 새로운 문자열을 만든다. 이를 계속 반복하여 문자를 모두 삭제할 수 있으면 1, 아니면 0을 출력하는 프로그램을 작성하시오.

baabaa -> bbaa -> aa -> NULL    -> 1
abaccabacaabbcabbacabccccc   ->  0

 * msvcrt.getch(), kbhit()


- 아래의 그림에서 1로 구성된 정사각형을 만든다고 할 때 가장 크게 만들 수 있는 경우는 크기가 얼마인가?    

1111111111
1111101111
1111111111
1111111111
1011111111
1111111111
1111111111
1111111011
1111111111
1111111111

  -> 5


- 정렬된 두개의 리스트가 주어질 때 이를 합쳐서 하나의 정렬된 리스트를 만드시오. 두개의 리스트에는 같은 숫자가 포함될 수도 있음

[1,3,5,7,9], [2,3,6,7,8,9] -> [1,2,3,3,5,6,7,7,8,9,9]


- 계산식이 주어질 때 맞으면 O, 틀리면 X를 return하는 함수 작성
"19 - 6 = 13",  "5 + 66 = 71",  "5 - 15 = 63",  "3 - 1 = 2" : O, O, X, O


- 이진 탐색 알고리즘을 구현하시오.

- 1부터 9까지의 숫자 중 일부가 들어있는 정수 배열 numbers가 매개변수로 주어질 때 numbers에서 찾을 수 없는 1부터 9까지의 숫자를 모두 찾아 더한 수를 출력하는 프로그램을 작성하시오.
[1,2,3,4,6,7,8] -> 14,   [5,8,4,6,7,9] -> 6

- 앞에서부터 읽을 때와 뒤에서부터 읽을 때 값이 같은 문자열을 Palindrome이라고 한다. 문자열이 주어질 때 Palindrome인지 아닌지 출력하는 프로그램을 작성하시오.(단, 구두점과 공백은 무시) 
"A man, a plan, a canal: Panama" -> True
"A man, a plan, canal: Panama" -> False
"다시 합창합시다."  -> True

- 다음과 같은 크기의 직사각형 상자가 있다. 이 상자에 한 변의 크기가 n인 상자를 최대 몇 개를 넣을 수 있는지 계산하는 프로그램을 작성하시오.
 [10, 8, 6], n = 3  -> 12
 [10, 8, 7], n = 2  -> 60


- 어떤 수 a를 제곱한 값 n이 주어질 때 a를 출력하는 프로그램을 작성하시오. 단, sqrt() 함수를 사용하면 안됨.
1522756 -> 1234
1524155677489  -> 1234567
2323050529221952581345121 -> 1524155677489
5396563761318393964062660689603780554533710504641 -> 2323050529221952581345121


- 두개의 자연수 a * b로 이루어진 숫자 n이 주어질 때 a와 b를 출력하는 프로그램을 작성하시오.
756360141659 -> 756373, 999983
1427247692705959880439315947500961989719490561 
-> 2305843009213693951,  618970019642690137449562111


- 문자열이 유효한 패스워드인지 검사하는 프로그램을 작성하시오. (예: 알파벳 대소문자 포함, 특수문자(!@#$%^&*<>?,./), 숫자 포함, 8글자 이상)
password -> False
Pa$$w5rd -> True
Pa$$w5r -> False


- 문자열이 "날짜 시간" 형태로 다음과 같이 "YYYY-MM-DD HH:MM" 형식으로 주어질 때 형식을 만족하는지 아닌지 확인하는 프로그램을 작성하시오.(regular expression 사용)
2024-10-05 04:00 -> True
2024-11-27  5:34 -> False

- 정수 l과 r이 주어졌을 때, l 이상 r이하의 정수 중에서 숫자 "0"과 "5"로만 이루어진 모든 정수를 오름차순으로 저장한 배열을 출력하는 프로그램을 작성하시오.
5, 555 -> [5, 50, 55, 500, 505, 550, 555]
3, 1000000000 일 때 배열의 길이는 얼마인가? 511개


- 정수 배열 list와 정수 n이 주어질 때, list에 들어있는 정수 중 n과 가장 가까운 수를 출력하는 프로그램을 작성하시오. 답이 두개일 때는 작은 수를 출력하시오.
[1, 2, 3, 4], 2 -> 2
[1,2,4,5], 3 -> 2


- 문자열을 압축할 때 연속한 문자인 경우 문자와 반복 횟수를 적어서 공간을 줄인다. 다음과 같이 문자열이 주어질 때 문자열 압축 알고리즘을 구현하시오.

  "aabbbcccc" → "a2b3c4" 


- 문자열 before와 after가 주어질 때, before의 순서를 바꾸어 after를 만들 수 있으면 1을, 만들 수 없으면 0을 출력하는 프로그램을 작성하시오.
  "ilovepython" - "vnioheplyto" -> 1
  "ilovepython" - "ilvepython" -> 0


- 소인수분해란 어떤 수를 소수들의 곱으로 표현하는 것이다. 예를 들어 12를 소인수 분해하면 2 * 2 * 3 으로 나타낼 수 있다. 따라서 12의 소인수는 2와 3이다. 자연수 n이 매개변수로 주어질 때 n의 소인수를 오름차순으로 담은 배열을 출력하는 프로그램을 작성하시오.
n = 12    -> [2,3]


- 정수 배열 numbers가 주어질 때 numbers에서 서로 다른 인덱스에 있는 두 개의 수를 뽑아 더해서 만들 수 있는 모든 수를 배열에 오름차순으로 담아 출력하는 프로그램을 작성하시오.
[2,1,3,4,1] -> [2,3,4,5,6,7]



- 문자열 a와 pattern이 아래와 같이 주어질 때 a에서 pattern이 등장하는 횟수를 구하는 프로그램을 작성하시오.
   "banana", "ana"  ->  2


- 정수 리스트가 입력으로 주어질 때 크기 순서대로 정렬한 배열을 출력하는 프로그램을 작성하시오.
  [3, 76, 24] -> [3, 1, 2]


- 다음과 같이 사람의 이름과 나이가 튜플로 주어질 때 나이순으로 정렬하시오.
  [("강동원", 24), ("이정재", 31), ("정해인", 35), ("정우성", 30), ("변우석", 30)] -> [("강동원", 24), ("변우석", 30), ("이정재", 31), ("정우성", 30), ("정해인", 35)]
- 나이순으로 정렬하시오.
  [("강동원", 24), ("이정재", 31), ("정해인", 35), ("정우성", 30), ("변우석", 30)] -> [("강동원", 24), ("정우성", 30), ("변우석", 30), ("이정재", 31), ("정해인", 35)]
- 나이가 같을 때는 이름순으로 정렬하시오.
 [("강동원", 24), ("이정재", 31), ("정해인", 35), ("정우성", 30), ("변우석", 30)] -> [("강동원", 24), ("변우석", 30), ("정우성", 30), ("이정재", 31), ("정해인", 35)]

- 정수 리스트가 입력으로 주어질 때 크기 순서대로 정렬한 배열을 출력하는 프로그램을 작성하시오.
  [3, 76, 24, 24] -> [4, 1, 2, 2]


- 학생에 대한 영어와 수학 점수 리스트가 다음과 같이 주어질 때 두 과목의 평균점수의 크기순으로 등수를 표시한 리스트를 출력하는 프로그램을 작성하시오.
[[80, 70], [90, 50], [40, 70], [50, 80]]	                                                -> [1, 2, 4, 3]
[[80, 70], [70, 80], [30, 50], [90, 100], [100, 90], [100, 100], [10, 30]]	-> [4, 4, 6, 2, 2, 1, 7]


- 직사각형의 각 꼭지점의 좌표가 다음과 같이 주어질 때 직사각형의 넓이를 계산하는 프로그램을 작성하시오.
[[1, 1], [2, 1], [2, 2], [1, 2]] -> 1



- 음이 아닌 정수를 9로 나눈 나머지는 그 정수의 각 자리 숫자의 합을 9로 나눈 나머지와 같다. 임의의 숫자가 주어질 때 9로 나눈 나머지는 얼마인지 출력하는 프로그램을 작성하시오.(나머지 연산자(%)를 사용하면 안됨) 
123 -> 6,  78720646226947352489 -> 2



- 임의의 문자열에서 실제 의미가 있는 문자는 매 n 번째 문자라고 할 때, 문자열 a와 자연수 n이 아래와 같이 주어질 때 실제 문장은 무엇인지 출력하는 프로그램을 작성하시오.
a = "dfjardstddetckdaccccdegk" , n = 4 -> “attack”
a = "pfqallllabwaoclk", n = 2 -> “fallback”


- 다음과 같이 문자열과 숫자쌍의 리스트가 주어질 때 결과를 출력하는 프로그램을 작성하시오. 리스트의 각 숫자쌍은 문자의 해당 인덱스 구간의 문자의 순서를 역순으로 하는 것을 의미한다.(문자열 a를 역순으로 하려면 a[::-1]을 하면 된다.)
"rermgorpsam" , [[2, 3], [0, 7], [5, 9], [6, 10]]  ->  "programmers"


- 문자열로 이루어진 리스트 a가 주어질 때 문자열의 길이가 긴 것 순으로 정렬한 결과를 출력하시오. 길이가 같은 문자열이 여러개 있을 때는 사전순으로 정렬되어야 한다.
a = ["It", "was", "nearing", "midnight", "and", "the", "Prime", "Minister", "was", "sitting", "alone", "in", "his", "office", "reading", "a", "long", "memo", "that", "was", "slipping", "through", "his", "brain", "without", "leaving", "the", "slightest", "trace", "of", "meaning", "behind"]
-> ['slightest', 'midnight', 'Minister', 'slipping', 'leaving', 'meaning', 'nearing', 'reading', 'sitting', 'through', 'without', 'behind', 'office', 'alone', 'brain', 'Prime', 'trace', 'long', 'memo', 'that', 'and', 'his', 'his', 'the', 'the', 'was', 'was', 'was', 'in', 'It', 'of', 'a']

